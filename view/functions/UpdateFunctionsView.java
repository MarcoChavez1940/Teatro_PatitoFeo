/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.functions;

import controller.functions.UpdateFunctionController;
import java.sql.Date;
import java.sql.Time;
import java.time.LocalTime;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import model.Function;
import persistencia.FunctionDAO;
import persistencia.ShowDAO;

/**
 *
 * @author marco
 */
public class UpdateFunctionsView extends javax.swing.JDialog {

    UpdateFunctionController updateFunctionController;
    ShowDAO showBD = new ShowDAO();
    Time durationShowSelected;
    /**
     * Creates new form UpdateFunctionsView2
     */
    public UpdateFunctionsView(java.awt.Frame parent, boolean modal, UpdateFunctionController controller) {
        super(parent, modal);
        initComponents();
        this.updateFunctionController = controller;
        
        tableFunctions.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(tableFunctions.getSelectedRow() != -1){
                    int funcionSelected = tableFunctions.getSelectedRow();
                    
                    durationShowSelected = showBD.getShowById(showBD.getIdShowByName(String.valueOf(tableFunctions.getValueAt(funcionSelected, 4)))).getDuration();
                    
                    updateIdFunctionTextField.setText(String.valueOf(tableFunctions.getValueAt(funcionSelected, 0)));
                    updateDateFunctionChooser.setDate((java.util.Date) tableFunctions.getValueAt(funcionSelected, 1));
                    hourSpinner.setValue(Integer.valueOf(tableFunctions.getValueAt(funcionSelected, 2).toString().substring(0, 2)));
                    minutesSpinner.setValue(Integer.valueOf(tableFunctions.getValueAt(funcionSelected, 2).toString().substring(3, 5)));
                    updateEndingHourFunctionTextField.setText(tableFunctions.getValueAt(funcionSelected, 3).toString().substring(0, 5));
                }
            }
        });
        
        updateFunctionController.getAllFunctionsToUpdate(tableFunctions);
        
    }

    private UpdateFunctionsView(JFrame jFrame, boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableFunctions = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        updateIdFunctionTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        updateDateFunctionChooser = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        updateEndingHourFunctionTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        updateFuncionButton = new javax.swing.JButton();
        hourSpinner = new javax.swing.JSpinner();
        minutesSpinner = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Funciones ofrecidas");

        tableFunctions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "fecha", "hora comiezo", "hora fin", "show", "estatus", "modificado"
            }
        ));
        jScrollPane1.setViewportView(tableFunctions);

        jLabel12.setText("Actualizar funcion");

        jLabel11.setText("Id");

        updateIdFunctionTextField.setEnabled(false);

        jLabel8.setText("Fecha");

        updateDateFunctionChooser.setDateFormatString("yyyy-MM-dd");

        jLabel9.setText("Hora de comienzo");

        updateEndingHourFunctionTextField.setEnabled(false);

        jLabel10.setText("Hora de finalizacion");

        updateFuncionButton.setText("Actualizar funcion");
        updateFuncionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateFuncionButtonActionPerformed(evt);
            }
        });

        hourSpinner.setModel(new javax.swing.SpinnerNumberModel(10, 0, 23, 1));
        hourSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hourSpinnerStateChanged(evt);
            }
        });

        minutesSpinner.setModel(new javax.swing.SpinnerNumberModel(30, 0, 59, 1));
        minutesSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                minutesSpinnerStateChanged(evt);
            }
        });

        jLabel14.setText("Formato hh:mm");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(308, 308, 308)
                            .addComponent(jLabel12))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(223, 223, 223)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(jLabel11))
                            .addGap(132, 132, 132)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(updateDateFunctionChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updateIdFunctionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(78, 78, 78)
                                    .addComponent(updateFuncionButton))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel9))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(44, 44, 44)
                                            .addComponent(jLabel14)
                                            .addGap(11, 11, 11))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(33, 33, 33)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(updateEndingHourFunctionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(hourSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(minutesSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(209, 209, 209)
                                .addComponent(jLabel1)))))
                .addContainerGap(170, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(updateIdFunctionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(updateDateFunctionChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hourSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minutesSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(updateEndingHourFunctionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(updateFuncionButton)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateFuncionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateFuncionButtonActionPerformed
        FunctionDAO functionBD = new FunctionDAO();
            ArrayList<Function> functionsResult = functionBD.getBusySchedules("'" + updateFunctionController.formatDate(updateDateFunctionChooser) +"'",
                    "'" + hourSpinner.getValue().toString() + ":" + minutesSpinner.getValue().toString() + ":00'", 
                    "'" + updateEndingHourFunctionTextField.getText() + ":00'");

            if(functionsResult.isEmpty() || functionsResult.size() == 1){
                updateFunctionController.updateFunction(Integer.valueOf(updateIdFunctionTextField.getText()),
                        Date.valueOf(updateFunctionController.formatDate(updateDateFunctionChooser)),
                        Time.valueOf(hourSpinner.getValue().toString() + ":" + minutesSpinner.getValue().toString() + ":00"),
                        Time.valueOf(updateEndingHourFunctionTextField.getText() + ":00")
                        );

                JOptionPane.showMessageDialog(this, "Actualización con exito");
                updateFunctionController.getAllFunctionsToUpdate(tableFunctions);
            }
            else{
                JOptionPane.showMessageDialog(this, "El horario ingresado colisiona con otra funcion"
                        + " o no respeta los 30 minutos entre funciones.\nProblemas con la funcion:\n"
                        + "id: " +functionsResult.get(functionsResult.size() - 1).getIdFunction() + "\n"
                        + "fecha: " + functionsResult.get(functionsResult.size() - 1).getDate() + "\n"
                        + "hora de inicio: " + functionsResult.get(functionsResult.size() - 1).getStartTime() + "\n"
                        + "hora de fin: " + functionsResult.get(functionsResult.size() - 1).getEndingTime());
            }
    }//GEN-LAST:event_updateFuncionButtonActionPerformed

    private void hourSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hourSpinnerStateChanged
        
        String hourSelected = hourSpinner.getValue().toString();
        String minutesSelected = minutesSpinner.getValue().toString();

        java.sql.Time myTime = java.sql.Time.valueOf(durationShowSelected.toString());
        LocalTime localtime = myTime.toLocalTime();
        localtime = localtime.plusHours(Long.valueOf(hourSelected));
        localtime = localtime.plusMinutes(Long.valueOf(minutesSelected));

        String endingTime = localtime.toString();

        updateEndingHourFunctionTextField.setText(endingTime);
    }//GEN-LAST:event_hourSpinnerStateChanged

    private void minutesSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_minutesSpinnerStateChanged
        String hourSelected = hourSpinner.getValue().toString();
        String minutesSelected = minutesSpinner.getValue().toString();

        java.sql.Time myTime = java.sql.Time.valueOf(durationShowSelected.toString());
        LocalTime localtime = myTime.toLocalTime();
        localtime = localtime.plusHours(Long.valueOf(hourSelected));
        localtime = localtime.plusMinutes(Long.valueOf(minutesSelected));

        String endingTime = localtime.toString();

        updateEndingHourFunctionTextField.setText(endingTime);
    }//GEN-LAST:event_minutesSpinnerStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateFunctionsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateFunctionsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateFunctionsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateFunctionsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UpdateFunctionsView dialog = new UpdateFunctionsView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner hourSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner minutesSpinner;
    public javax.swing.JTable tableFunctions;
    public com.toedter.calendar.JDateChooser updateDateFunctionChooser;
    public javax.swing.JTextField updateEndingHourFunctionTextField;
    public javax.swing.JButton updateFuncionButton;
    public javax.swing.JTextField updateIdFunctionTextField;
    // End of variables declaration//GEN-END:variables
}
